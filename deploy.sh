#!/bin/bash

# Script de d√©ploiement pour VPS
# Usage: ./deploy.sh [production|staging]

set -e

ENVIRONMENT=${1:-production}
PROJECT_NAME="telegram-bot-admin"

echo "üöÄ D√©ploiement du bot Telegram - Environnement: $ENVIRONMENT"

# V√©rifier que Docker est install√©
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker n'est pas install√©. Installation..."
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    sudo usermod -aG docker $USER
    echo "‚úÖ Docker install√©. Red√©marrez votre session pour continuer."
    exit 1
fi

# V√©rifier que Docker Compose est install√©
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose n'est pas install√©. Installation..."
    sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    echo "‚úÖ Docker Compose install√©."
fi

# V√©rifier que le fichier .env existe
if [ ! -f ".env" ]; then
    echo "‚ùå Fichier .env manquant. Copie du fichier exemple..."
    cp .env.example .env
    echo "‚ö†Ô∏è  IMPORTANT: Configurez le fichier .env avec vos vraies valeurs avant de continuer!"
    echo "   - TELEGRAM_BOT_TOKEN"
    echo "   - ADMIN_PASSWORD"
    echo "   - SESSION_SECRET"
    echo "   - DOMAIN"
    read -p "Appuyez sur Entr√©e apr√®s avoir configur√© le fichier .env..."
fi

# Cr√©er les r√©pertoires n√©cessaires
echo "üìÅ Cr√©ation des r√©pertoires..."
mkdir -p data uploads logs ssl

# Arr√™ter les conteneurs existants
echo "üõë Arr√™t des conteneurs existants..."
docker-compose down || true

# Construire et d√©marrer les conteneurs
echo "üî® Construction et d√©marrage des conteneurs..."
docker-compose up --build -d

# Attendre que les services soient pr√™ts
echo "‚è≥ Attente du d√©marrage des services..."
sleep 10

# V√©rifier l'√©tat des conteneurs
echo "üîç V√©rification de l'√©tat des conteneurs..."
docker-compose ps

# Afficher les logs
echo "üìã Affichage des logs r√©cents..."
docker-compose logs --tail=20

# Instructions finales
echo ""
echo "‚úÖ D√©ploiement termin√©!"
echo ""
echo "üìã Informations importantes:"
echo "   - Panel admin: http://$(curl -s ifconfig.me):3000"
echo "   - Logs: docker-compose logs -f"
echo "   - Red√©marrage: docker-compose restart"
echo "   - Arr√™t: docker-compose down"
echo ""
echo "üîß Configuration SSL (optionnel):"
echo "   1. Obtenez un certificat SSL (Let's Encrypt recommand√©)"
echo "   2. Placez les fichiers dans ./ssl/"
echo "   3. D√©commentez les lignes SSL dans nginx/conf.d/bot-admin.conf"
echo "   4. Red√©marrez: docker-compose restart nginx"
echo ""
echo "‚ö†Ô∏è  N'oubliez pas de:"
echo "   - Configurer votre domaine pour pointer vers cette IP"
echo "   - Ouvrir les ports 80 et 443 dans votre firewall"
echo "   - Sauvegarder r√©guli√®rement le dossier ./data"

# Test de connectivit√©
echo ""
echo "üß™ Test de connectivit√©..."
if curl -f -s http://localhost:3000 > /dev/null; then
    echo "‚úÖ Panel admin accessible localement"
else
    echo "‚ùå Probl√®me de connectivit√© - v√©rifiez les logs"
    docker-compose logs telegram-bot
fi