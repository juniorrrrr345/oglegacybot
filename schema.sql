-- Cr√©ation des tables pour Cloudflare D1

-- Table de configuration
CREATE TABLE IF NOT EXISTS config (
    id INTEGER PRIMARY KEY,
    bot_id TEXT DEFAULT 'main',
    welcome_message TEXT DEFAULT 'ü§ñ Bienvenue {firstname} sur notre bot!',
    welcome_image TEXT,
    info_text TEXT DEFAULT '‚ÑπÔ∏è Informations sur notre service',
    mini_app_url TEXT,
    mini_app_text TEXT DEFAULT 'üéÆ Ouvrir l\'application',
    livraison_text TEXT DEFAULT 'üöö SERVICE LIVRAISON\n\nContactez-nous pour vos livraisons',
    livraison_image TEXT,
    postal_text TEXT DEFAULT 'üìÆ SERVICE POSTAL\n\nEnvoi de colis et courriers',
    postal_image TEXT,
    meetup_text TEXT DEFAULT 'üìç SERVICE MEET UP\n\nOrganisation de rencontres',
    meetup_image TEXT,
    catalogue_url TEXT DEFAULT 'https://example.com/catalogue',
    social_buttons_per_row INTEGER DEFAULT 2,
    buttons_per_row INTEGER DEFAULT 2,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Table des utilisateurs
CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER UNIQUE NOT NULL,
    username TEXT,
    first_name TEXT,
    last_name TEXT,
    is_admin BOOLEAN DEFAULT 0,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    last_seen DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Table des r√©seaux sociaux
CREATE TABLE IF NOT EXISTS social_networks (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    emoji TEXT DEFAULT 'üîó',
    url TEXT NOT NULL,
    position INTEGER DEFAULT 0,
    is_active BOOLEAN DEFAULT 1,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Table des sous-menus des services
CREATE TABLE IF NOT EXISTS service_submenus (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    service_type TEXT NOT NULL, -- 'livraison', 'postal', 'meetup'
    name TEXT NOT NULL,
    text TEXT,
    image TEXT,
    position INTEGER DEFAULT 0,
    is_active BOOLEAN DEFAULT 1,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Table des √©tats utilisateur (pour g√©rer les conversations)
CREATE TABLE IF NOT EXISTS user_states (
    user_id INTEGER PRIMARY KEY,
    state TEXT,
    data TEXT, -- JSON string pour stocker des donn√©es additionnelles
    message_id INTEGER,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Table des statistiques
CREATE TABLE IF NOT EXISTS stats (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    event_type TEXT NOT NULL, -- 'start', 'admin', 'service_click', etc.
    user_id INTEGER,
    data TEXT, -- JSON string pour donn√©es additionnelles
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Ins√©rer la configuration par d√©faut
INSERT OR IGNORE INTO config (id, bot_id) VALUES (1, 'main');

-- Ins√©rer quelques r√©seaux sociaux par d√©faut
INSERT OR IGNORE INTO social_networks (name, emoji, url, position) VALUES 
    ('Instagram', 'üì∑', 'https://instagram.com/votrecompte', 1),
    ('Telegram', 'üì¢', 'https://t.me/votrechannel', 2),
    ('WhatsApp', 'üí¨', 'https://wa.me/votrenum√©ro', 3);

-- Index pour optimiser les requ√™tes
CREATE INDEX IF NOT EXISTS idx_users_user_id ON users(user_id);
CREATE INDEX IF NOT EXISTS idx_user_states_user_id ON user_states(user_id);
CREATE INDEX IF NOT EXISTS idx_stats_created_at ON stats(created_at);
CREATE INDEX IF NOT EXISTS idx_service_submenus_service ON service_submenus(service_type, position);